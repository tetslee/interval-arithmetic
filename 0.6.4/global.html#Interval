<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Interval - Documentation</title>

    <script src="scripts/prettify/prettify.js"></script>
    <script src="scripts/prettify/lang-css.js"></script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <link type="text/css" rel="stylesheet" href="styles/prettify.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc.css">
</head>
<body>

<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger" class="navicon-button x">
  <div class="navicon"></div>
</label>

<label for="nav-trigger" class="overlay"></label>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="global.html#Interval">Interval</a><ul class='methods'><li data-type='method'><a href="global.html#Interval#abs">abs</a></li><li data-type='method'><a href="global.html#Interval#add">add</a></li><li data-type='method'><a href="global.html#Interval#assign">assign</a></li><li data-type='method'><a href="global.html#Interval#bounded">bounded</a></li><li data-type='method'><a href="global.html#Interval#boundedSingleton">boundedSingleton</a></li><li data-type='method'><a href="global.html#Interval#clone">clone</a></li><li data-type='method'><a href="global.html#Interval#difference">difference</a></li><li data-type='method'><a href="global.html#Interval#div">div</a></li><li data-type='method'><a href="global.html#Interval#divide">divide</a></li><li data-type='method'><a href="global.html#Interval#equal">equal</a></li><li data-type='method'><a href="global.html#Interval#exp">exp</a></li><li data-type='method'><a href="global.html#Interval#fmod">fmod</a></li><li data-type='method'><a href="global.html#Interval#geq">geq</a></li><li data-type='method'><a href="global.html#Interval#greaterEqualThan">greaterEqualThan</a></li><li data-type='method'><a href="global.html#Interval#greaterThan">greaterThan</a></li><li data-type='method'><a href="global.html#Interval#gt">gt</a></li><li data-type='method'><a href="global.html#Interval#halfOpenLeft">halfOpenLeft</a></li><li data-type='method'><a href="global.html#Interval#halfOpenRight">halfOpenRight</a></li><li data-type='method'><a href="global.html#Interval#hasInterval">hasInterval</a></li><li data-type='method'><a href="global.html#Interval#hasValue">hasValue</a></li><li data-type='method'><a href="global.html#Interval#hull">hull</a></li><li data-type='method'><a href="global.html#Interval#intersection">intersection</a></li><li data-type='method'><a href="global.html#Interval#intervalsOverlap">intervalsOverlap</a></li><li data-type='method'><a href="global.html#Interval#isEmpty">isEmpty</a></li><li data-type='method'><a href="global.html#Interval#isInterval">isInterval</a></li><li data-type='method'><a href="global.html#Interval#isSingleton">isSingleton</a></li><li data-type='method'><a href="global.html#Interval#isWhole">isWhole</a></li><li data-type='method'><a href="global.html#Interval#leq">leq</a></li><li data-type='method'><a href="global.html#Interval#lessEqualThan">lessEqualThan</a></li><li data-type='method'><a href="global.html#Interval#lessThan">lessThan</a></li><li data-type='method'><a href="global.html#Interval#ln">ln</a></li><li data-type='method'><a href="global.html#Interval#log">log</a></li><li data-type='method'><a href="global.html#Interval#log2">log2</a></li><li data-type='method'><a href="global.html#Interval#log10">log10</a></li><li data-type='method'><a href="global.html#Interval#lt">lt</a></li><li data-type='method'><a href="global.html#Interval#max">max</a></li><li data-type='method'><a href="global.html#Interval#min">min</a></li><li data-type='method'><a href="global.html#Interval#mul">mul</a></li><li data-type='method'><a href="global.html#Interval#multiplicativeInverse">multiplicativeInverse</a></li><li data-type='method'><a href="global.html#Interval#multiply">multiply</a></li><li data-type='method'><a href="global.html#Interval#negative">negative</a></li><li data-type='method'><a href="global.html#Interval#notEqual">notEqual</a></li><li data-type='method'><a href="global.html#Interval#nthRoot">nthRoot</a></li><li data-type='method'><a href="global.html#Interval#open">open</a></li><li data-type='method'><a href="global.html#Interval#positive">positive</a></li><li data-type='method'><a href="global.html#Interval#pow">pow</a></li><li data-type='method'><a href="global.html#Interval#set">set</a></li><li data-type='method'><a href="global.html#Interval#setEmpty">setEmpty</a></li><li data-type='method'><a href="global.html#Interval#setWhole">setWhole</a></li><li data-type='method'><a href="global.html#Interval#singleton">singleton</a></li><li data-type='method'><a href="global.html#Interval#sqrt">sqrt</a></li><li data-type='method'><a href="global.html#Interval#sub">sub</a></li><li data-type='method'><a href="global.html#Interval#subtract">subtract</a></li><li data-type='method'><a href="global.html#Interval#toArray">toArray</a></li><li data-type='method'><a href="global.html#Interval#union">union</a></li><li data-type='method'><a href="global.html#Interval#wid">wid</a></li><li data-type='method'><a href="global.html#Interval#width">width</a></li><li data-type='method'><a href="global.html#Interval#zeroIn">zeroIn</a></li></ul></li></ul><h3>Modules</h3><ul><li><a href="module-interval-arithmetic_round-math.html">interval-arithmetic/round-math</a><ul class='methods'><li data-type='method'><a href="module-interval-arithmetic_round-math.html#.disable">disable</a></li><li data-type='method'><a href="module-interval-arithmetic_round-math.html#.enable">enable</a></li><li data-type='method'><a href="module-interval-arithmetic_round-math.html#.safeNext">safeNext</a></li><li data-type='method'><a href="module-interval-arithmetic_round-math.html#.safePrev">safePrev</a></li></ul></li></ul><h3>Mixins</h3><ul><li><a href="algebra.html">algebra</a><ul class='methods'><li data-type='method'><a href="algebra.html#.fmod">fmod</a></li><li data-type='method'><a href="algebra.html#.multiplicativeInverse">multiplicativeInverse</a></li><li data-type='method'><a href="algebra.html#.nthRoot">nthRoot</a></li><li data-type='method'><a href="algebra.html#.pow">pow</a></li><li data-type='method'><a href="algebra.html#.sqrt">sqrt</a></li></ul></li><li><a href="arithmetic.html">arithmetic</a><ul class='methods'><li data-type='method'><a href="arithmetic.html#.add">add</a></li><li data-type='method'><a href="arithmetic.html#.div">div</a></li><li data-type='method'><a href="arithmetic.html#.divide">divide</a></li><li data-type='method'><a href="arithmetic.html#.mul">mul</a></li><li data-type='method'><a href="arithmetic.html#.multiply">multiply</a></li><li data-type='method'><a href="arithmetic.html#.negative">negative</a></li><li data-type='method'><a href="arithmetic.html#.positive">positive</a></li><li data-type='method'><a href="arithmetic.html#.sub">sub</a></li><li data-type='method'><a href="arithmetic.html#.subtract">subtract</a></li></ul></li><li><a href="constants.html">constants</a></li><li><a href="misc.html">misc</a><ul class='methods'><li data-type='method'><a href="misc.html#.abs">abs</a></li><li data-type='method'><a href="misc.html#.clone">clone</a></li><li data-type='method'><a href="misc.html#.difference">difference</a></li><li data-type='method'><a href="misc.html#.exp">exp</a></li><li data-type='method'><a href="misc.html#.hull">hull</a></li><li data-type='method'><a href="misc.html#.intersection">intersection</a></li><li data-type='method'><a href="misc.html#.ln">ln</a></li><li data-type='method'><a href="misc.html#.log">log</a></li><li data-type='method'><a href="misc.html#.log2">log2</a></li><li data-type='method'><a href="misc.html#.log10">log10</a></li><li data-type='method'><a href="misc.html#.max">max</a></li><li data-type='method'><a href="misc.html#.min">min</a></li><li data-type='method'><a href="misc.html#.union">union</a></li><li data-type='method'><a href="misc.html#.wid">wid</a></li><li data-type='method'><a href="misc.html#.width">width</a></li></ul></li><li><a href="relational.html">relational</a><ul class='methods'><li data-type='method'><a href="relational.html#.equal">equal</a></li><li data-type='method'><a href="relational.html#.geq">geq</a></li><li data-type='method'><a href="relational.html#.greaterEqualThan">greaterEqualThan</a></li><li data-type='method'><a href="relational.html#.greaterThan">greaterThan</a></li><li data-type='method'><a href="relational.html#.gt">gt</a></li><li data-type='method'><a href="relational.html#.leq">leq</a></li><li data-type='method'><a href="relational.html#.lessEqualThan">lessEqualThan</a></li><li data-type='method'><a href="relational.html#.lessThan">lessThan</a></li><li data-type='method'><a href="relational.html#.lt">lt</a></li><li data-type='method'><a href="relational.html#.notEqual">notEqual</a></li></ul></li><li><a href="utils.html">utils</a><ul class='methods'><li data-type='method'><a href="utils.html#.hasInterval">hasInterval</a></li><li data-type='method'><a href="utils.html#.hasValue">hasValue</a></li><li data-type='method'><a href="utils.html#.intervalsOverlap">intervalsOverlap</a></li><li data-type='method'><a href="utils.html#.isEmpty">isEmpty</a></li><li data-type='method'><a href="utils.html#.isInterval">isInterval</a></li><li data-type='method'><a href="utils.html#.isSingleton">isSingleton</a></li><li data-type='method'><a href="utils.html#.isWhole">isWhole</a></li><li data-type='method'><a href="utils.html#.zeroIn">zeroIn</a></li></ul></li></ul><h3><a href="global.html">Global</a></h3>
</nav>

<div id="main">
    
    <h1 class="page-title">Interval</h1>
    

    




<section>

<header>
    
        <h2>
        Interval
        </h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    

    <h4 class="name" id="Interval"><span class="type-signature"></span>new Interval<span class="signature">(lo, hi<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line70">line 70</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html">arithmetic</a></li>
        
            <li><a href="algebra.html">algebra</a></li>
        
            <li><a href="misc.html">misc</a></li>
        
            <li><a href="relational.html">relational</a></li>
        
            <li><a href="utils.html">utils</a></li>
        
            <li><a href="constants.html">constants</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    
    <dt class="tag-see">See:</dt>
    <dd class="tag-see">
        <ul>
            <li><a href="Interval.html#bounded">#bounded</a></li>
        
            <li><a href="Interval.html#boundedSingleton">#boundedSingleton</a></li>
        </ul>
    </dd>
    

    
</dl>





<div class="description">
    <p>Constructor for closed intervals representing all the values inside (and
including) <code>lo</code> and <code>hi</code> e.g. <code>[lo, hi]</code></p>
<p>NOTE: If <code>lo &gt; hi</code> then the constructor will return an empty interval</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>new Interval(1, 2)  // {lo: 1, hi: 2}</code></pre>

    <pre class="prettyprint"><code>// function invocation without new is also supported
Interval(1, 2)   // {lo: 1, hi: 2} </code></pre>

    <pre class="prettyprint"><code>// with numbers 
Interval(1, 2)   // {lo: 1, hi: 2} 
Interval(1)      // {lo: 1, hi: 1}</code></pre>

    <pre class="prettyprint"><code>// with an array
Interval([1, 2]) // {lo: 1, hi: 2}</code></pre>

    <pre class="prettyprint"><code>// singleton intervals
var x = Interval(1)
var y = Interval(2)
Interval(x, y)   // {lo: 1, hi: 2}</code></pre>

    <pre class="prettyprint"><code>// when `lo > hi` it returns an empty interval
Interval(2, 1)   // {lo: Infinity, hi: -Infinity}</code></pre>

    <pre class="prettyprint"><code>// bounded interval
Interval().bounded(1, 2)  // { lo: 0.9999999999999999, hi: 2.0000000000000004 }</code></pre>

    <pre class="prettyprint"><code>// singleton bounded interval
Interval().boundedSingleton(2)  // {lo: 1.9999999999999998, hi: 2.0000000000000004}</code></pre>

    <pre class="prettyprint"><code>// half open and open intervals
// [2, 3]
Interval(2, 3)                     // {lo: 2, hi: 3}
// (2, 3]
Interval().halfOpenLeft(2, 3)      // {lo: 2.0000000000000004, hi: 3}
// [2, 3)
Interval().halfOpenRight(2, 3)     // {lo: 2, hi: 2.9999999999999996}
// (2, 3)
Interval().open(2, 3)              // {lo: 2.0000000000000004, hi: 2.9999999999999996}</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>
|

<span class="param-type">array</span>
|

<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>The left endpoint of the interval if it's a
number or a singleton interval, if it's an array then an interval will be
built out of the elements of the array</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>
|

<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"><p>The right endpoint of the interval if it's a
number or a singleton interval, if omitted then a singleton interval will be
built out of <code>lo</code></p></td>
        </tr>

    
    </tbody>
</table>
















    
    </div>

    

    

    

     

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id=".rmath"><span class="type-signature">(static) </span>rmath<span class="type-signature"></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="index.js.html">index.js</a>, <a href="index.js.html#line14">line 14</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    
        <dt class="important tag-deprecated">Deprecated:</dt><dd><ul class="dummy"><li>as of 0.6.4</li></ul></dd>
    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Use <a href="global.html#Interval#.round">Interval.round</a> instead</p>
</div>








        
            
<h4 class="name" id=".round"><span class="type-signature">(static) </span>round<span class="type-signature"></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="index.js.html">index.js</a>, <a href="index.js.html#line22">line 22</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Link to <a href="module-interval-arithmetic_round-math.html">module:interval-arithmetic/round-math</a></p>
</div>








        
            
<h4 class="name" id="EMPTY"><span class="type-signature"></span>EMPTY<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line131">line 131</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.EMPTY">constants.EMPTY</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents no values
NOTE: calls to Interval.EMPTY always return a new interval representing no
values</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// Interval.EMPTY is equivalent to
Interval().setEmpty()</code></pre>



        
            
<h4 class="name" id="hi"><span class="type-signature"></span>hi<span class="type-signature"> :number</span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line116">line 116</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>The right endpoint of the interval</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>






        
            
<h4 class="name" id="lo"><span class="type-signature"></span>lo<span class="type-signature"> :number</span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line110">line 110</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>The left endpoint of the interval</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>






        
            
<h4 class="name" id="ONE"><span class="type-signature"></span>ONE<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line100">line 100</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.ONE">constants.ONE</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents 1, NOTE: calls to Interval.ONE always
return a new interval representing 1</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// Interval.ONE is equivalent to
Interval(1)</code></pre>



        
            
<h4 class="name" id="PI"><span class="type-signature"></span>PI<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.PI">constants.PI</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents PI, NOTE: calls to Interval.PI always return
a new interval representing PI</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval(Interval.PI_LOW, Interval.PI_HIGH)</code></pre>



        
            
<h4 class="name" id="PI_HALF"><span class="type-signature"></span>PI_HALF<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line57">line 57</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.PI_HALF">constants.PI_HALF</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents PI / 2, NOTE: calls to Interval.PI_HALF always
return a new interval representing PI / 2</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval(Interval.PI_LOW / 2, Interval.PI_HIGH / 2)</code></pre>



        
            
<h4 class="name" id="PI_HIGH"><span class="type-signature"></span>PI_HIGH<span class="type-signature"> :number</span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.PI_HIGH">constants.PI_HIGH</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Next IEEE floating point value of PI, 3.1415926535897936</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>






        
            
<h4 class="name" id="PI_LOW"><span class="type-signature"></span>PI_LOW<span class="type-signature"> :number</span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line21">line 21</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.PI_LOW">constants.PI_LOW</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Previous IEEE floating point value of PI (equal to Math.PI)
3.141592653589793</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>






        
            
<h4 class="name" id="PI_TWICE"><span class="type-signature"></span>PI_TWICE<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line71">line 71</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.PI_TWICE">constants.PI_TWICE</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents PI <em> 2, NOTE: calls to Interval.PI_TWICE always
return a new interval representing PI </em> 2</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval(Interval.PI_LOW * 2, Interval.PI_HIGH * 2)</code></pre>



        
            
<h4 class="name" id="WHOLE"><span class="type-signature"></span>WHOLE<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line115">line 115</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.WHOLE">constants.WHOLE</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents all the real values
NOTE: calls to Interval.WHOLE always return a new interval representing all
the real values</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// Interval.WHOLE is equivalent to
Interval().setWhole()</code></pre>



        
            
<h4 class="name" id="ZERO"><span class="type-signature"></span>ZERO<span class="type-signature"> :<a href="global.html#Interval">Interval</a></span></h4>





<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_constants.js.html">lib/constants.js</a>, <a href="lib_constants.js.html#line85">line 85</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="constants.html#.ZERO">constants.ZERO</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>An interval that represents 0, NOTE: calls to Interval.ZERO always
return a new interval representing 0</p>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


        </li>
    </ul>





    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// Interval.ZERO is equivalent to
Interval(0)</code></pre>



        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    <h4 class="name" id="abs"><span class="type-signature"></span>abs<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line288">line 288</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.abs">misc.abs</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the absolute value of <code>x</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.abs(
  Interval(2, 3)
)  // Interval(2, 3)</code></pre>

    <pre class="prettyprint"><code>Interval.abs(
  Interval(-2, 3)
)  // Interval(2, 3)</code></pre>

    <pre class="prettyprint"><code>Interval.abs(
  Interval(-3, -2)
)  // Interval(2, 3)</code></pre>

    <pre class="prettyprint"><code>Interval.abs(
  Interval(-3, 2)
)  // Interval(0, 3)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="add"><span class="type-signature"></span>add<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.add">arithmetic.add</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Adds two intervals</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.add(
  Interval(0, 1),
  Interval(1, 2),
)   // Interval(prev(1), next(3))</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="assign"><span class="type-signature"></span>assign<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line192">line 192</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets new endpoints for this interval checking that both arguments exist
and that are valid numbers, additionally if <code>lo &gt; hi</code> the interval is set to
an empty interval</p>
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">Number</span>


            
            </td>

            

            

            <td class="description last"><p>The left endpoint of the interval</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">Number</span>


            
            </td>

            

            

            <td class="description last"><p>The right endpoint of the interval</p></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="bounded"><span class="type-signature"></span>bounded<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line156">line 156</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets new endpoints to this interval, the left endpoint is equal to the
previous IEEE floating point value of <code>lo</code> and the right endpoint
is equal to the next IEEE floating point
value of <code>hi</code>, it's assumed that <code>lo &lt;= hi</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>var x = Interval().bounded(1, 2)
x.lo &lt; 1 // true, x.lo === 0.9999999999999999 
x.hi > 2 // true, x.hi === 2.0000000000000004</code></pre>

    <pre class="prettyprint"><code>// the correct representation of 1/3
var x = Interval().bounded(1/3, 1/3)
x.lo &lt; 1/3 // true
x.hi > 1/3 // true
// however the floating point representation of 1/3 is less than the real 1/3
// therefore the left endpoint could be 1/3 instead of the previous value of
var next = Interval.round.safeNext
var x = Interval().set(1/3, next(1/3))
// x now represents 1/3 correctly</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval i.e. <code>this</code></p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="boundedSingleton"><span class="type-signature"></span>boundedSingleton<span class="signature">(v)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line165">line 165</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Equivalent to <code>Interval().bounded(v, v)</code></p>
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>v</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval i.e. <code>this</code></p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="clone"><span class="type-signature"></span>clone<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line366">line 366</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.clone">misc.clone</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Creates an interval equal to <code>x</code>, equivalent to <code>Interval().set(x.lo, x.hi)</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.clone(
  Interval(1, 2)
)  // Interval(1, 2)</code></pre>

    <pre class="prettyprint"><code>Interval.clone(
  Interval.EMPTY
)  // Interval.EMPTY</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="difference"><span class="type-signature"></span>difference<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line202">line 202</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.difference">misc.difference</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the difference between <code>x</code> and <code>y</code>, i.e. an interval with all the
values of <code>x</code> that are not in <code>y</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.difference(
  Interval(3, 5),
  Interval(4, 6)
)  // Interval(3, prev(4))</code></pre>

    <pre class="prettyprint"><code>Interval.difference(
  Interval(0, 3),
  Interval(0, 1)
)  // Interval(next(1), 3)</code></pre>

    <pre class="prettyprint"><code>Interval.difference(
  Interval(0, 1),
  Interval.WHOLE
)  // Interval.EMPTY</code></pre>

    <pre class="prettyprint"><code>Interval.difference(
  Interval(-Infinity, 0),
  Interval.WHOLE
)  // Interval.EMPTY</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>












<h5>Throws:</h5>

        

<dl>
    <dt>
        <div class="param-desc">
        <p>When the difference creates multiple intervals</p>
        </div>
    </dt>
    <dd></dd>
    <dt>
        <dl>
            <dt>
                Type
            </dt>
            <dd>
                
<span class="param-type">Error</span>


            </dd>
        </dl>
    </dt>
    <dd></dd>
</dl>


    


<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="div"><span class="type-signature"></span>div<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line229">line 229</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.div">arithmetic.div</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="arithmetic.html#.divide">arithmetic.divide</a></p>
</div>

























        
            

    

    <h4 class="name" id="divide"><span class="type-signature"></span>divide<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line202">line 202</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.divide">arithmetic.divide</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes x/y</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.divide(
  Interval(1, 2),
  Interval(3, 4)
) // Interval(prev(1/4), next(2/3))</code></pre>

    <pre class="prettyprint"><code>Interval.divide(
  Interval(-2, 1),
  Interval(-4, -3)
) // Interval(prev(-1/3), next(2/3))</code></pre>

    <pre class="prettyprint"><code>Interval.divide(
  Interval(1, 2),
  Interval(-1, 1)
) // Interval(-Infinity, Infinity)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="equal"><span class="type-signature"></span>equal<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line31">line 31</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.equal">relational.equal</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the intervals <code>x</code>, <code>y</code> are equal, they're equal when
<code>x.lo === y.lo</code> and <code>x.hi === y.hi</code>, a corner case handled is when <code>x</code> and
<code>y</code> are both empty intervals</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.equal(
  Interval(2, 3),
  Interval(2, 3)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.equal(
  Interval.EMPTY,
  Interval.EMPTY
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="exp"><span class="type-signature"></span>exp<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line26">line 26</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.exp">misc.exp</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes e^x where e is the mathematical constant equal to the base of the
natural logarithm</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.exp(
  Interval(-1, 1)
)  // Interval(0.3679, 2.7183)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="fmod"><span class="type-signature"></span>fmod<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_algebra.js.html">lib/operations/algebra.js</a>, <a href="lib_operations_algebra.js.html#line35">line 35</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="algebra.html#.fmod">algebra.fmod</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes x mod y (x - k * y)</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.fmod(
  Interval(5.3, 5.3),
  Interval(2, 2)
) // Interval(1.3, 1.3)</code></pre>

    <pre class="prettyprint"><code>Interval.fmod(
  Interval(5, 7),
  Interval(2, 3)
) // Interval(2, 5)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="geq"><span class="type-signature"></span>geq<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line192">line 192</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.geq">relational.geq</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="relational.html#.greaterEqualThan">relational.greaterEqualThan</a></p>
</div>

























        
            

    

    <h4 class="name" id="greaterEqualThan"><span class="type-signature"></span>greaterEqualThan<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line181">line 181</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.greaterEqualThan">relational.greaterEqualThan</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the interval <code>x</code> is greater or equal than <code>y</code> i.e.
if all the values of <code>x</code> are greater or equal to the right endpoint of <code>y</code></p>
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="greaterThan"><span class="type-signature"></span>greaterThan<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line136">line 136</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.greaterThan">relational.greaterThan</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the interval <code>x</code> is greater than <code>y</code> i.e. if all the values of <code>x</code>
are greater than the right endpoint of <code>y</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.greaterThan(
  Interval(2, 3),
  Interval(4, 5)
) // false</code></pre>

    <pre class="prettyprint"><code>Interval.greaterThan(
  Interval(4, 5),
  Interval(2, 3)
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="gt"><span class="type-signature"></span>gt<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line147">line 147</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.gt">relational.gt</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="relational.html#.greaterThan">relational.greaterThan</a></p>
</div>

























        
            

    

    <h4 class="name" id="halfOpenLeft"><span class="type-signature"></span>halfOpenLeft<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line248">line 248</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets the endpoints of this interval to the half open interval <code>(lo, hi]</code></p>
<p>NOTE: <code>Interval.round.disable</code> has no effect on this method</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// (2, 3]
Interval().halfOpenLeft(2, 3)  // {lo: 2.0000000000000004, hi: 3}</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="halfOpenRight"><span class="type-signature"></span>halfOpenRight<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line264">line 264</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets the endpoints of this interval to the half open interval <code>[lo, hi)</code></p>
<p>NOTE: <code>Interval.round.disable</code> has no effect on this method</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// [2, 3)
Interval.halfOpenRight(2, 3)     // {lo: 2, hi: 2.9999999999999996}</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="hasInterval"><span class="type-signature"></span>hasInterval<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line135">line 135</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.hasInterval">utils.hasInterval</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if <code>x</code> is a subset of <code>y</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.hasInteravl(
  Interval(0, 3),
  Interval(1, 2) 
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.hasInteravl(
  Interval(0, 3),
  Interval(1, 4) 
) // false</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="hasValue"><span class="type-signature"></span>hasValue<span class="signature">(x, value)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line114">line 114</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.hasValue">utils.hasValue</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if <code>value</code> is included in the interval <code>x</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.hasValue(
  Interval(-1, 1),
  0
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.hasValue(
  Interval(-1, 1),
  10
) // false</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="hull"><span class="type-signature"></span>hull<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.hull">misc.hull</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes an interval that has all the values of x and y, note that it may be
possible that values that don't belong to either x or y are included in the
interval that represents the hull</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.hull(
  Interval(-1, 1),
  Interval(5, 7)
)  // Interval(-1, 7)</code></pre>

    <pre class="prettyprint"><code>Interval.hull(
  Interval(-1, 1),
  Interval.EMPTY
)  // Interval(-1, 1)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="intersection"><span class="type-signature"></span>intersection<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line135">line 135</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.intersection">misc.intersection</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes an interval that has all the values that belong to both x and y</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.intersection(
  Interval(-1, 1),
  Interval(0, 7)
)  // Interval(0, 1)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="intervalsOverlap"><span class="type-signature"></span>intervalsOverlap<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line167">line 167</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.intervalsOverlap">utils.intervalsOverlap</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the intervals <code>x</code>, <code>y</code> overlap i.e. if they share at least one
value</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.intervalsOverlap(
  Interval(0, 3),
  Interval(1, 2)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.intervalsOverlap(
  Interval(0, 2),
  Interval(1, 3)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.intervalsOverlap(
  Interval(0, 2),
  Interval(2, 3)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.intervalsOverlap(
  Interval(0, 1),
  Interval(2, 3)
) // false</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="isEmpty"><span class="type-signature"></span>isEmpty<span class="signature">(x)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line49">line 49</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.isEmpty">utils.isEmpty</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if <code>x</code> is empty, it's empty when <code>x.lo &gt; x.hi</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.isEmpty(
  Interval.EMPTY
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.isEmpty(
  Interval.WHOLE
) // false</code></pre>

    <pre class="prettyprint"><code>Interval.isEmpty(
  // bypass empty interval check
  Interval().set(1, -1)
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="isInterval"><span class="type-signature"></span>isInterval<span class="signature">(x)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line27">line 27</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.isInterval">utils.isInterval</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if <code>x</code> is an interval, <code>x</code> is an interval if it's an object which has
<code>x.lo</code> and <code>x.hi</code> defined and both are numbers</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.isInterval(
  Interval()
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.isInterval(
  undefined
) // false</code></pre>

    <pre class="prettyprint"><code>Interval.isInterval(
  {lo: 1, hi: 2}
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type">*</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>true if <code>x</code> is an interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="isSingleton"><span class="type-signature"></span>isSingleton<span class="signature">(x)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line81">line 81</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.isSingleton">utils.isSingleton</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the intervals <code>x</code> is a singleton (an interval representing a single
value) i.e. when <code>x.lo === x.hi</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.isSingleton(
 Interval(2, 2)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.isSingleton(
 Interval(2)
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="isWhole"><span class="type-signature"></span>isWhole<span class="signature">(x)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line63">line 63</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.isWhole">utils.isWhole</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if an interval is a whole interval, that is an interval which covers
all the real numbers i.e. when <code>x.lo === -Infinity</code> and <code>x.hi === Infinity</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.isWhole(
  Interval.WHOLE
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="leq"><span class="type-signature"></span>leq<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line172">line 172</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.leq">relational.leq</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="relational.html#.lessEqualThan">relational.lessEqualThan</a></p>
</div>

























        
            

    

    <h4 class="name" id="lessEqualThan"><span class="type-signature"></span>lessEqualThan<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line161">line 161</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.lessEqualThan">relational.lessEqualThan</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the interval <code>x</code> is less or equal than <code>y</code> i.e.
if all the values of <code>x</code> are lower or equal to the left endpoint of <code>y</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.lessEqualThan(
  Interval(2, 3),
  Interval(3, 5)
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="lessThan"><span class="type-signature"></span>lessThan<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line106">line 106</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.lessThan">relational.lessThan</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the interval <code>x</code> is less than <code>y</code> i.e. if all the values of <code>x</code>
are lower than the left endpoint of <code>y</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.lessThan(
  Interval(2, 3),
  Interval(4, 5)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.lessThan(
  Interval(4, 5),
  Interval(2, 3)
) // false</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="ln"><span class="type-signature"></span>ln<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line53">line 53</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.ln">misc.ln</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="misc.html#.log">misc.log</a></p>
</div>

























        
            

    

    <h4 class="name" id="log"><span class="type-signature"></span>log<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line43">line 43</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.log">misc.log</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the natural logarithm of x</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.log(
  Interval(1, Math.exp(3))
)  // Interval(0, 3)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="log2"><span class="type-signature"></span>log2<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.log2">misc.log2</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the logarithm base 2 of x</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.log10(
  Interva(1, 8)
)  // Interval(0, 3)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="log10"><span class="type-signature"></span>log10<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line66">line 66</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.log10">misc.log10</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the logarithm base 10 of x</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.log10(
  Interva(1, 1000)
)  // Interval(0, 3)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="lt"><span class="type-signature"></span>lt<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line117">line 117</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.lt">relational.lt</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="relational.html#.lessThan">relational.lessThan</a></p>
</div>

























        
            

    

    <h4 class="name" id="max"><span class="type-signature"></span>max<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line307">line 307</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.max">misc.max</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes an interval with the maximum values for each endpoint based on <code>x</code>
and <code>y</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.max(
  Interval(0, 3),
  Interval(1, 2)
)  // Interval(1, 3)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="min"><span class="type-signature"></span>min<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line336">line 336</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.min">misc.min</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes an interval with the minimum values for each endpoint based on <code>x</code>
and <code>y</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.min(
  Interval(0, 3),
  Interval(1, 2)
)  // Interval(0, 2)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="mul"><span class="type-signature"></span>mul<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line179">line 179</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.mul">arithmetic.mul</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="arithmetic.html#.multiply">arithmetic.multiply</a></p>
</div>

























        
            

    

    <h4 class="name" id="multiplicativeInverse"><span class="type-signature"></span>multiplicativeInverse<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_algebra.js.html">lib/operations/algebra.js</a>, <a href="lib_operations_algebra.js.html#line58">line 58</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="algebra.html#.multiplicativeInverse">algebra.multiplicativeInverse</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes 1 / x</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.multiplicativeInverse(
  Interval(2, 6)
)  // Interval(1/6, 1/2)</code></pre>

    <pre class="prettyprint"><code>Interval.multiplicativeInverse(
  Interval(-6, -2)
)  // Interval(-1/2, -1/6)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="multiply"><span class="type-signature"></span>multiply<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line88">line 88</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.multiply">arithmetic.multiply</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Multiplies two intervals</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.multiply(
 Interval(1, 2),
 Interval(2, 3)
) // Interval(prev(2), next(6))</code></pre>

    <pre class="prettyprint"><code>Interval.multiply(
 Interval(1, Infinity),
 Interval(4, 6)
) // Interval(prev(4), Infinity)</code></pre>

    <pre class="prettyprint"><code>Interval.multiply(
 Interval(1, 2),
 Interval(-3, -2)
) // Interval(prev(-6), next(-2))</code></pre>

    <pre class="prettyprint"><code>Interval.multiply(
 Interval(1, 2),
 Interval(-2, 3)
) // Interval(prev(-4), next(6))</code></pre>

    <pre class="prettyprint"><code>Interval.multiply(
 Interval(-2, -1),
 Interval(-3, -2)
) // Interval(prev(2), next(6))</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="negative"><span class="type-signature"></span>negative<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line262">line 262</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.negative">arithmetic.negative</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes -x</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.negative(
  Interval(1, 2)
)  // Interval(-2, -1)</code></pre>

    <pre class="prettyprint"><code>Interval.negative(
  Interval(-Infinity, Infinity)
)  // Interval(-Infinity, Infinity)</code></pre>

    <pre class="prettyprint"><code>Interval.negative(
  Interval.WHOLE
)  // Interval.WHOLE</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="notEqual"><span class="type-signature"></span>notEqual<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_relational.js.html">lib/operations/relational.js</a>, <a href="lib_operations_relational.js.html#line82">line 82</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="relational.html#.notEqual">relational.notEqual</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if the intervals <code>x</code>, <code>y</code> are not equal i.e. when the intervals don't
share any value</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.notEqual(
  Interval(2, 3),
  Interval(4, 5)
) // true</code></pre>

    <pre class="prettyprint"><code>Interval.notEqual(
  Interval(2, 3),
  Interval(3, 5)
) // false</code></pre>

    <pre class="prettyprint"><code>Interval.notEqual(
  Interval(2, 4),
  Interval(3, 5)
) // false</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="nthRoot"><span class="type-signature"></span>nthRoot<span class="signature">(x, n)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_algebra.js.html">lib/operations/algebra.js</a>, <a href="lib_operations_algebra.js.html#line215">line 215</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="algebra.html#.nthRoot">algebra.nthRoot</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes x^(1/n)</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.nthRoot(
  Interval(-27, -8),
  3
) // Interval(-3, -2)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>n</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>
|

<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"><p>A number or a singleton interval</p></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="open"><span class="type-signature"></span>open<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line232">line 232</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets the endpoints of this interval to the open interval <code>(lo, hi)</code></p>
<p>NOTE: <code>Interval.round.disable</code> has no effect on this method</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>// (2, 3)
Interval().open(2, 3)  // {lo: 2.0000000000000004, hi: 2.9999999999999996}</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="positive"><span class="type-signature"></span>positive<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line241">line 241</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.positive">arithmetic.positive</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    
    <dt class="tag-see">See:</dt>
    <dd class="tag-see">
        <ul>
            <li><a href="misc.html#.clone">misc.clone</a></li>
        </ul>
    </dd>
    

    
</dl>





<div class="description">
    <p>Computes +x (identity function)</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.positive(
 Interval(1, 2)
)  // Interval(1, 2)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="pow"><span class="type-signature"></span>pow<span class="signature">(x, power)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_algebra.js.html">lib/operations/algebra.js</a>, <a href="lib_operations_algebra.js.html#line122">line 122</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="algebra.html#.pow">algebra.pow</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes x^power given that <code>power</code> is an integer</p>
<p>If <code>power</code> is an Interval it must be a singletonInterval i.e. x^x is not
supported yet</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>// 2^{-2}
Interval.pow(
  Interval(2, 2),
  -2
)  // Interval(1/4, 1/4)</code></pre>

    <pre class="prettyprint"><code>// [2,3]^2
Interval.pow(
  Interval(2, 3),
  2
)  // Interval(4, 9)</code></pre>

    <pre class="prettyprint"><code>// [2,3]^0
Interval.pow(
  Interval(2, 3),
  0
)  // Interval(1, 1)</code></pre>

    <pre class="prettyprint"><code>// with a singleton interval
Interval.pow(
  Interval(2, 3),
  Interval(2)
)  // Interval(4, 9)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>power</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>
|

<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"><p>A number of a singleton interval</p></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="set"><span class="type-signature"></span>set<span class="signature">(lo, hi)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line177">line 177</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets new endpoints for this interval, this method bypasses any
checks on the type of arguments</p>
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>lo</code></td>
            

            <td class="type">
            
                
<span class="param-type">Number</span>


            
            </td>

            

            

            <td class="description last"><p>The left endpoint of the interval</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>hi</code></td>
            

            <td class="type">
            
                
<span class="param-type">Number</span>


            
            </td>

            

            

            <td class="description last"><p>The right endpoint of the interval</p></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="setEmpty"><span class="type-signature"></span>setEmpty<span class="signature">()</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line207">line 207</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets the endpoints of this interval to <code>[∞, -∞]</code> effectively representing 
no values</p>
</div>























<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="setWhole"><span class="type-signature"></span>setWhole<span class="signature">()</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line216">line 216</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets the endpoints of this interval to <code>[-∞, ∞]</code> effectively representing all
the possible real values</p>
</div>























<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval</p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="singleton"><span class="type-signature"></span>singleton<span class="signature">(v)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line129">line 129</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Sets <code>this.lo</code> and <code>this.hi</code> to a single value <code>v</code></p>
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>v</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The calling interval i.e. <code>this</code></p>
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="sqrt"><span class="type-signature"></span>sqrt<span class="signature">(x)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_algebra.js.html">lib/operations/algebra.js</a>, <a href="lib_operations_algebra.js.html#line199">line 199</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="algebra.html#.sqrt">algebra.sqrt</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes sqrt(x), alias for <code>nthRoot(x, 2)</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.sqrt(
  Interval(4, 9)
) // Interval(prev(2), next(3))</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="sub"><span class="type-signature"></span>sub<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line55">line 55</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.sub">arithmetic.sub</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="arithmetic.html#.subtract">arithmetic.subtract</a></p>
</div>

























        
            

    

    <h4 class="name" id="subtract"><span class="type-signature"></span>subtract<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_arithmetic.js.html">lib/operations/arithmetic.js</a>, <a href="lib_operations_arithmetic.js.html#line44">line 44</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="arithmetic.html#.subtract">arithmetic.subtract</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Subtracts two intervals</p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.subtract(
  Interval(0, 1),
  Interval(1, 2),
)   // Interval(prev(-2), next(0))</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="toArray"><span class="type-signature"></span>toArray<span class="signature">()</span><span class="type-signature"> &rarr; {array}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_interval.js.html">lib/interval.js</a>, <a href="lib_interval.js.html#line272">line 272</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Array representation of this interval</p>
</div>























<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">array</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="union"><span class="type-signature"></span>union<span class="signature">(x, y)</span><span class="type-signature"> &rarr; {<a href="global.html#Interval">Interval</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line164">line 164</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.union">misc.union</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes an interval that has all the values that belong to both x and y,
the difference with <a href="misc.html#.hull">misc.hull</a> is that x and y must overlap to
compute the union</p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.union(
  Interval(-1, 1),
  Interval(5, 7)
)  // throws error</code></pre>

    <pre class="prettyprint"><code>Interval.union(
  Interval(-1, 1),
  Interval(1, 7)
)  // Interval(-1, 7)</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>y</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>












<h5>Throws:</h5>

        

<dl>
    <dt>
        <div class="param-desc">
        <p>When x and y don't overlap</p>
        </div>
    </dt>
    <dd></dd>
    <dt>
        <dl>
            <dt>
                Type
            </dt>
            <dd>
                
<span class="param-type">Error</span>


            </dd>
        </dl>
    </dt>
    <dd></dd>
</dl>


    


<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="wid"><span class="type-signature"></span>wid<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line265">line 265</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.wid">misc.wid</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Alias for <a href="misc.html#.width">misc.width</a></p>
</div>

























        
            

    

    <h4 class="name" id="width"><span class="type-signature"></span>width<span class="signature">(x)</span><span class="type-signature"> &rarr; {number}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_misc.js.html">lib/operations/misc.js</a>, <a href="lib_operations_misc.js.html#line256">line 256</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="misc.html#.width">misc.width</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Computes the distance between the endpoints of the interval i.e.
<code>x.hi - x.lo</code></p>
</div>









    <h5>Examples</h5>
    
    <pre class="prettyprint"><code>Interval.width(
  Interval(1, 2)
)  // 1</code></pre>

    <pre class="prettyprint"><code>Interval.width(
  Interval(-1, 1)
)  // 2</code></pre>

    <pre class="prettyprint"><code>Interval.width(
  Interval(1, 1)
)  // next(0) ~5e-324 </code></pre>

    <pre class="prettyprint"><code>Interval.width(
  Interval.EMPTY
)  // 0</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">number</span>


    </dd>
</dl>

    


        
            

    

    <h4 class="name" id="zeroIn"><span class="type-signature"></span>zeroIn<span class="signature">(x)</span><span class="type-signature"> &rarr; {boolean}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="lib_operations_utils.js.html">lib/operations/utils.js</a>, <a href="lib_operations_utils.js.html#line94">line 94</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    
        <dt class="mixes">Mixes In:</dt>

        <dd class="mixes"><ul>
        
            <li><a href="utils.html#.zeroIn">utils.zeroIn</a></li>
        
        </ul></dd>
    

    

    

    

    

    

    

    

    
</dl>





<div class="description">
    <p>Checks if zero is included in the interval <code>x</code></p>
</div>









    <h5>Example</h5>
    
    <pre class="prettyprint"><code>Interval.zeroIn(
  Interval(-1, 1)
) // true</code></pre>




    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>x</code></td>
            

            <td class="type">
            
                
<span class="param-type"><a href="global.html#Interval">Interval</a></span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>














<h5>Returns:</h5>

        


<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    


        
    

    

    
</article>

</section>




</div>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.4.0</a> on Mon Apr 18 2016 22:24:33 GMT-0400 (BOT) using the Minami theme.
</footer>

<script>prettyPrint();</script>
<script src="scripts/linenumber.js"></script>
</body>
</html>